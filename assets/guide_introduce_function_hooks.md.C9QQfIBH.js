import{_ as a,o as i,c as t,aQ as e}from"./chunks/framework.CDHCSj6k.js";const E=JSON.parse('{"title":"hooks","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduce/function/hooks.md","filePath":"guide/introduce/function/hooks.md","lastUpdated":1734578011000}'),h={name:"guide/introduce/function/hooks.md"};function n(l,s,p,k,r,o){return i(),t("div",null,s[0]||(s[0]=[e(`<h1 id="hooks" tabindex="-1">hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;hooks&quot;">​</a></h1><h2 id="usectx-ts" tabindex="-1">useCtx.ts <a class="header-anchor" href="#usectx-ts" aria-label="Permalink to &quot;useCtx.ts&quot;">​</a></h2><p>用于获取当前组件实例，并且将常用的方法挂载到当前实例，在组件中方便使用 组件中使用如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> useCtx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/hooks/useCtx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useCtx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$app.$router.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;detail&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$app.$message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">succss</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;操作成功！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">proxy.$refs.addDialog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openDialog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="usetablepage-ts" tabindex="-1">useTablePage.ts <a class="header-anchor" href="#usetablepage-ts" aria-label="Permalink to &quot;useTablePage.ts&quot;">​</a></h2><p>表格组件公共的方法</p><h2 id="usevalidate-ts" tabindex="-1">useValidate.ts <a class="header-anchor" href="#usevalidate-ts" aria-label="Permalink to &quot;useValidate.ts&quot;">​</a></h2><p>校验</p>`,8)]))}const c=a(h,[["render",n]]);export{E as __pageData,c as default};
