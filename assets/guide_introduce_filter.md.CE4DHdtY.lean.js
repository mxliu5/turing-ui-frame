import{_ as s,o as a,c as e,aQ as t}from"./chunks/framework.CDHCSj6k.js";const c=JSON.parse('{"title":"筛选条件缓存","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduce/filter.md","filePath":"guide/introduce/filter.md","lastUpdated":1735282790000}'),l={name:"guide/introduce/filter.md"};function h(n,i,r,o,p,k){return a(),e("div",null,i[0]||(i[0]=[t(`<h1 id="筛选条件缓存" tabindex="-1">筛选条件缓存 <a class="header-anchor" href="#筛选条件缓存" aria-label="Permalink to &quot;筛选条件缓存&quot;">​</a></h1><p>列表页进入详情页，再返回到列表页——缓存之前选中的筛选条件</p><h2 id="实现思路" tabindex="-1">实现思路 <a class="header-anchor" href="#实现思路" aria-label="Permalink to &quot;实现思路&quot;">​</a></h2><p>通过<code>store存储</code>实现</p><ol><li>进入详情页时保存当前查询条件到store</li><li>进入其他页面(<code>非详情页面</code>)，清除查询条件缓存内容</li><li>每次进入列表页，根据当前页面的缓存值判断是否需要回显缓存值</li></ol><h2 id="逻辑说明" tabindex="-1">逻辑说明 <a class="header-anchor" href="#逻辑说明" aria-label="Permalink to &quot;逻辑说明&quot;">​</a></h2><ol><li>以每个页面的路由名称作为key值，将当前页面查询条件缓存到对象中。避免多个页面间公用一个变量产生冲突</li><li>查询条件有三个执行时机，保存、清除、回显。其中保存和清除在<code>onBeforeRouteLeave</code>执行，回显在<code>查询项queryItems加载完成后</code>执行。</li><li>为了减少重复代码的编写，已将上述操作封装成公共的hooks。具体可查看<code>useTablePage.ts</code>的实现逻辑</li></ol><h2 id="列表适配" tabindex="-1">列表适配 <a class="header-anchor" href="#列表适配" aria-label="Permalink to &quot;列表适配&quot;">​</a></h2><p>参考demo/list代码即可。引入<code>useTablePage</code>。并且传参<code>routeName</code>；</p><div class="tip custom-block"><p class="custom-block-title">特别说明：</p><ol><li>仅当通过useTablePage传参routeName时，才会缓存筛选条件的值。若不传，默认不进行缓存</li><li>若列表页还嵌套一层父级组件，例如父组件中通过切换tab页面来切换列表内容。如果想要进入详情页再返回列表页能够缓存父组件中的tab选项，这个时候可以在List.vue中定义一个emits = defineEmits([&#39;queryCacheInit&#39;]),然后将emits通过useTablePage传给hooks，然后在父级组件处理queryCacheInit就能够得到当前缓存的值，然后进行回显，代码参考demo4/list;效果参考<a href="https://mxliu5.github.io/turing-ui-frame-page/#/mock-demo4" target="_blank" rel="noreferrer">https://mxliu5.github.io/turing-ui-frame-page/#/mock-demo4</a></li></ol></div><p>list.vue</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> useTablePage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/hooks/useTablePage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> routeName</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mock-demo&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">queryItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">searchQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resetQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selectedIdshandleSelectionChange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTablePage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(routeName);</span></span></code></pre></div>`,12)]))}const u=s(l,[["render",h]]);export{c as __pageData,u as default};
