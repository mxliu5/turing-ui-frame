import{_ as a,o as t,c as i,aQ as l}from"./chunks/framework.CDHCSj6k.js";const q=JSON.parse('{"title":"框架适配实际开发","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduce/use.md","filePath":"guide/introduce/use.md","lastUpdated":1734578011000}'),o={name:"guide/introduce/use.md"};function r(s,e,u,d,c,n){return t(),i("div",null,e[0]||(e[0]=[l('<h1 id="框架适配实际开发" tabindex="-1">框架适配实际开发 <a class="header-anchor" href="#框架适配实际开发" aria-label="Permalink to &quot;框架适配实际开发&quot;">​</a></h1><p>基于实际开发框架可能需要修改的部分</p><h2 id="全局class的名称定义" tabindex="-1">全局class的名称定义 <a class="header-anchor" href="#全局class的名称定义" aria-label="Permalink to &quot;全局class的名称定义&quot;">​</a></h2><ul><li>通过<code>turing-ui-frame</code>作为全局class 将所有的公共样式放在这个class下面写来避免样式污染</li><li>名称根据实际项目去定义（建议以项目名称进行定义）</li></ul><h2 id="微应用名称的定义" tabindex="-1">微应用名称的定义 <a class="header-anchor" href="#微应用名称的定义" aria-label="Permalink to &quot;微应用名称的定义&quot;">​</a></h2><ul><li>vite.config.ts 中 qiankun(&quot;<code>skybox-base</code>&quot;, { useDevMode: true})</li></ul><h2 id="微应用的静态资源匹配路径" tabindex="-1">微应用的静态资源匹配路径 <a class="header-anchor" href="#微应用的静态资源匹配路径" aria-label="Permalink to &quot;微应用的静态资源匹配路径&quot;">​</a></h2><ul><li>vite.config.ts 中 base: &#39;./&#39;</li></ul><h2 id="微应用打包生成的目录名称" tabindex="-1">微应用打包生成的目录名称 <a class="header-anchor" href="#微应用打包生成的目录名称" aria-label="Permalink to &quot;微应用打包生成的目录名称&quot;">​</a></h2><ul><li>vite.config.ts 中 outDir: &quot;<code>dist</code>&quot;</li><li>utils/helper.ts中require方法的封装 replace(&quot;public&quot;, &quot;<code>dist</code>&quot;)</li></ul><h2 id="一些公共的业务代码封装的部分修改" tabindex="-1">一些公共的业务代码封装的部分修改 <a class="header-anchor" href="#一些公共的业务代码封装的部分修改" aria-label="Permalink to &quot;一些公共的业务代码封装的部分修改&quot;">​</a></h2><ul><li>aixos的baseURL 以及响应参数统一处理逻辑（以实际项目接口返参格式为准）</li><li>table-page中loadData中的 <code>page和size</code>的定义（以实际项目列表接口传参字段定义为准）</li><li>table-page中对列表响应数据的处理（以实际项目列表接口返参格式为准）</li></ul>',12)]))}const p=a(o,[["render",r]]);export{q as __pageData,p as default};
